# Windows ohne Ubuntu-VM mit VS Code Server
# REPO_DIR_WIN='__VOLLSTAENDIGEN_PFAD_HIER_EINTRAGEN__'
# alias docker_compose="MSYS_NO_PATHCONV=1 docker compose -f '${REPO_DIR_WIN}\docker\compose.yml' -f '${REPO_DIR_WIN}\docker\compose.override.yml'"
# MSYS_NO_PATHCONV=1 braucht es in Git-Bash, aber nicht auf Linux-Hosts
# export HISTFILE="${REPO_DIR_WIN}\.bash_history"

# Windows mit Ubuntu-VM mit VS Code Server
REPO_DIR_WSL='/home/USERNAME/meik'
alias docker_compose="docker compose -f '${REPO_DIR_WSL}/docker/compose.yml' -f '${REPO_DIR_WSL}/docker/compose.override.yml'"
export HISTFILE="${REPO_DIR_WSL}/.bash_history"

# Linux
# TODO

shopt -s histappend
PROMPT_COMMAND="history -a"

alias gs='git status'
alias gilrm="rm -f '$REPO_DIR/.git/index.lock'"
alias rmgil='gilrm'
alias gl='git log --oneline'
alias gf='git fetch --all'
function git_backup_branch() {
    local cur_branch="$(git rev-parse --abbrev-ref HEAD)";
    git checkout -b "${cur_branch}_backup_$(date +%+4Y-%m-%d_%H-%M-%S)";
    git checkout "${cur_branch}";
}
alias gb='git_backup_branch'
alias gp='git push --force-with-lease'

alias docker_compose_run='docker_compose run --rm'
alias docker_compose_exec='docker_compose exec'
alias dr='docker_compose restart'
alias drb='docker_compose up --build -d'
alias ddown='docker_compose down'
alias dps='docker_compose ps'

alias docker_compose_run_normal='docker_compose run --user normal --rm'
alias docker_compose_run_root='docker_compose run --user root --rm'
alias docker_compose_exec_normal='docker_compose exec --user normal'
alias docker_compose_exec_root='docker_compose exec --user root'
alias bashapp='docker_compose_exec_normal app bash -i'
alias bashapproot='docker_compose_exec_root app bash -i'
alias php-fpm='docker_compose_exec_root app php-fpm'
alias php='docker_compose_exec_normal app php'
alias phpd='php -dxdebug.mode=debug -dxdebug.start_with_request'
alias artisan='php artisan'
alias composer='docker_compose_exec_normal app composer'
alias ci='composer install'
alias cda='composer dump-autoload'

alias nodesh='docker_compose run --rm -it --entrypoint sh node'
alias node='docker_compose run --rm -it node'
alias npm='docker_compose run --rm -it node npm'
alias npx='docker_compose run --rm -it node npx'

alias bashdb='docker_compose_exec -w /opt/couchdb db bash -i'
# $1 - user - "admin" or "normal"
# $2 - HTTP method like PUT GET POST DELETE
# $3 - path, must start with /
# [$4] - JSON
function curl_db() {
    local user="$1";
    local method="$2";
    local path="$3";
    if [[ "$user" == "admin" ]] ; then
        # Trennung User und Passwort durch Doppelpunkt
        local auth='H-j6d)5<\*3m1!p_Rq}8:1e~0XAy(L.|6-fUj+Kw2V>f,'
    else
        local auth='H-j6d)5<\*3m1!p_Rq}8:1e~0XAy(L.|6-fUj+Kw2V>f,'
    fi
    local -a opts;
    if [[ "$#" -ge 4 ]] ; then
        opts=("-d" "$4");
    fi
    docker_compose_exec db curl \
        -u "$auth" \
        -H 'Content-Type: application/json' \
        -H 'Accept: application/json' \
        -X "$method" \
        "${opts[@]}" \
        "localhost:5984$path";
}
alias curldb_admin="curl_db admin"
alias curldb_normal="curl_db normal"
alias dbadminput="curldb_admin PUT"
alias dbadminget="curldb_admin GET"
alias dbadminpost="curldb_admin POST"
alias dbadmindelete="curldb_admin DELETE"
alias dbput="curldb_normal PUT"
alias dbget="curldb_normal GET"
alias dbpost="curldb_normal POST"
alias dbdelete="curldb_normal DELETE"

# export GPG_TTY=$(tty)
