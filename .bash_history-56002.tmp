drb
alias docker_compose
drb
alias docker_compose
drb
drb
git fetch --all
git branch
git status
rm .bashrc_old 
git reset --hard origin/20250122_qr-Code_exiibits
git log --online
git log --oneline
gl
git status
git branch
drb
drb
gb
gs
drb
drb
drb
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
drb
dps
ddown 
drb
dps
docker container inspect meik-web-1
docker container inspect meik-node-1
ci
npm ci
ddown
drb
artisan migrate:fresh --seed
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
ddown
drb
drb
htop
ddown
drb
gb
gp
gp
gp
git status
git branch
gp
ddown
drb
ci
git config user.name
git config user.name 'EDMEIK'
git config user.name
gp
git config user.email
git config user.email 'enrico-it@posteo.de'
git config user.email
gp
gp
gp
git config --global credential.credentialStore gpg
PASSWORD_STORE_DIR
$pass
echo $pass
pass
gpg --gen-key
pass init enrico daerr
pass init 'enrico daerr'
sudo apt install pass
pass init 'enrico daerr'
gpg --full-generate-key
gpg --full-generate-key
gpg --full-generate-key
gpg --full-generate-key
gpg --full-generate-key
pass init "Enrico DÃ¤rr"
wget https://github.com/git-ecosystem/git-credential-manager/releases/download/v2.5.1/gcm-linux_amd64.2.5.1.deb
sudo dpkg -i gcm-linux_amd64.2.5.1.deb
git-credential-manager configure
git config --global credential.credentialStore gpg
git config --global credential.gitHubAuthModes device
gp
ddown
drb
nano .gitignore 
ls
echo gcm-linux_amd64.2.5.1.deb>>.gitignore 
nano .gitignore 
nano .gitignore 
gb
gp
gb
git status
git commit -m "alte Code-Version wiederhergestellt"
git commit -am "alte Code-Version wiederhergestellt"
gp
gp
drb
ddown
drb
git status
git fetch --all
gb
git status
git status
gp
git status
git status
gb
git status
gb
gp
git fetch --all
git fetch --all
gb
gb
gp
git fetch --all
ddown
drb
ci
npm ci
artisan migrate:fresh --seed
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
ddown
drb
ddown
drb
ddown
drb
ddown
drb
ddown
drb
ddown
drb
sudo apt install mysql -y
sqlite3 HaarJenau.db
sudo apt install mysql -y
sudo apt install mongodb -y
systemctl start mongodb
mongod --version
mongodb --version
sudo apt install mongodb-org -y
sudo apt update
sudo apt update && sudo apt upgrade -y
systemctl start mongodb
systemctl start mongoDB
systemctl start mongosh
mongosh
mongosh --help
node.js
mongosh
mongosh --version
mongosh db
mongosh show dbs
mongosh use DBEDTest_Mongodb
mongosh
show dbs
mongosh show dbs
db
mongosh dn
mongosh db
mongosh
cleart
clear
mongosh
mongodb-org
mongodb-org-server
sudo systemctl start mongod
wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
sudo apt-get update
sudo apt-get install -y mongodb-mongosh
mongosh --version
mongosh
sudo systemctl start mongod
which mongod
mongod --version
mongod
sudo apt install mongod -y
wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo apt-get --fix-broken install
wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8))
wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead
sudo apt-get install -f
sudo apt-get --fix-broken install
sudo apt-get install mongodb-org -y
sudo apt-get install mongodb-org
wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/debian bullseye/mongodb-org/6.0 main" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
# Beispiel: MongoDB 6.0
curl -fsSL https://www.mongodb.org/static/pgp/server-6.0.asc | sudo gpg --dearmor -o /usr/share/keyrings/mongodb-6.0.gpg
lsb_release -a
cat /etc/debian_version
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/debian/gpg   | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
https://download.docker.com/linux/debian \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
sudo docker run -d --name mongodb -p 27017:27017 mongo:6.0
mongosh
mongosh "mongodb://localhost:27017"
cd Syncthing/
ls
cd Tausche\ Obsidian\ SynthesenVault/
ls
cd synthese/
cd Anhaenge/
ls
./'D-Ticket_Sept24_20240928-083510_Trebuchet.png' 
'D-Ticket_Sept24_20240928-083510_Trebuchet.png' 
.'D-Ticket_Sept24_20240928-083510_Trebuchet.png' 
cd IM_Friseur/
ls
cd Projekt-Haargenau/
ls
mongosh
ls
mongosh
mongosh "mongodb://localhost:27017"
sudo docker run -d --name mongodb -p 27017:27017 mongo:6.0
docker run -d --name mongodb -p 27017:27017 mongo:6.0
sudo docker run -d --name mongodb -p 27017:27017 mongo:6.0
mongosh "mongodb://localhost:27017"
sudo docker run -d --name mongodb -p 27017:27017 mongo:6.0
docker run --help
mongosh "mongodb://localhost:27017"
sudo docker run -d --name mongodb -p 27017:27017 mongo:6.0
sudo docker run hello-world
sudo docker run -d --name mongodb -p 27017:27017 mongo:6.0
docker run
docker run mongodb
docker ps -a
docker start mongodb
mongosh
cd ..
ls
cd Tausche\ Obsidian\ SynthesenVault/
ls
cd synthese/Anhaenge/
ls
cd Angular-Projekte/
ls
ng serve
npm install -g @angular/cli
cd ..
cd SchulDaten_LwH/
ls
cd Git_Repos/
ls
cd Projekt_MEIK/
ls
cd meik
drb
mongosh/* Allgemeines Card-Styling */
sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
gocryptfs ... Backup_Home_mit_freefilesync_ED13/
usbguard list-devices 
usbguard list-devices allow
usbguard list-devices block
nmcli connection import type wireguard file wg_config.conf
nmcli connection import type wireguard file wg-config.conf
usbguard list-devices allow
usbguard allow-device -p 82
htop
usbguard list-devices block
killall telegram-desktop 
sudo apt-get install libgimp2.0-dev libgegl-dev
drb
cat /proc/sys/fs/inotify/max_user_watches
sudo sysctl fs.inotify.max_user_watches=524288
htop
sudo sysctl fs.inotify.max_user_watches=524288
drb
git status
gb
ddown
drb
ddown
drb
drb
ddown
drb
drb
artisan migrate
htop
ddown
sudo apt install waydroid -y
sudo apt install curl ca-certificates -y
curl -s https://repo.waydro.id | sudo bash
sudo apt install waydroid -y
waydroid 
waydroid -h
waydroid -q
waydroid app install nomoapp.apk
waydroid
waydroid app install nomoapp.apk
waydroid -w
waydroid -h
waydroid -shell
drb
ddown
sudo sysctl fs.inotify.max_user_watches=524288
flatpak install flathub page.kramo.Sly
flatpak install flathub io.github.josephmawa.Egghead y
flatpak install flathub io.github.josephmawa.Egghead -y
flatpak install flathub es.danirod.Cartero -y
sudo sysctl fs.inotify.max_user_watches=524288
drb
artisan migrate:fresh --seed
ddown
docker volume ls
docker volume rm meik_mariadb_data_persistent
drb
ci
npm ci
artisan migrate:fresh --seed
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
artisan migrate:fresh --seed
php artisan migrate:fresh --seed
ddown
clear
drb
ci
npm ci
artisan migrate:fresh --seed
ddown
echo $pw
find -type f -name ".env"
nano .env
drb
nano docker/.env
ci
npm ci
artisan migrate:fresh --seed
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
artisan migrate:fresh --seed
ddown
drb
artisan migrate:fresh --seed
notify-send "test" "Spratzer"
./Support_bzw_ServiceKostenZaehler.sh 
node 
drb
ci
npm ci
artisan migrate:fresh --seed
ddown
rclo
rclone
sudo apt install rclone -y
rclone 
drb
ddown
drb
usbguard list-devices
drb
ci
npm ci
artisan migrate:fresh --seed
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
ddown
drb
artisan migrate:fresh --seed
artisan migrate:fresh --seed
drb
artisan migrate:fresh --seed
ddown
drb
https://linuxcapable.com/how-to-install-php-on-linux-mint/
php
php8
sudo apt install php -y
sudo apt install php-fpm
php -v
php -v
docker ps
sudo systemctl status mariadb
sudo systemctl status mariadb
sudo systemctl start mariadb
mysql -h 127.0.0.1 -P 3306 -u root -p root
drb
artisan migrate:fresh --seed
drb
ddown
drb
ddown
drb
artisan migrate:fresh --seed
gl
gf
gb
gs
git checkout main
gs
git restore .gitignore
gs
git checkout main
git pull
gs
ddown
nano .env
drb
ci
npm ci
artisan migrate:fresh --seed
artisan migrate:fresh
nano .env
artisan migrate:fresh --seed
artisan ziggy:generate --types resources/js/ziggy/ziggy.js
ddown
drb
gs
git fetch --all
gb
gb
git fetch --all
gs
git status
gb
git push
git status
git push --set-upstream origin Change_Global_ButtonColors
git push --set-upstream origin Change_Global_ButtonColors
git push --set-upstream origin Change_Global_ButtonColors
git push --set-upstream origin Change_Global_ButtonColors
git push --set-upstream origin Change_Global_ButtonColors
git push --set-upstream origin Change_Global_ButtonColors
git push --set-upstream origin Change_Global_ButtonColors
git push origin Change_Global_ButtonColors
gp
gp
gp
gp
ssh -T git@github.com
ssh-keygen -t rsa -b 4096 -C "enrico.meik@posteo.de"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa
cd $HOME/.ssh/
ls
ls -la
ssh-add ~/.ssh/
cd $HOME
cd .ssh/
ls
cd config 
nano config 
clear
gp
gp
gp
gp
git config --global commit.gpgsign false
gp
gpg-agent --daemon
gpg --list-secret-keys --keyid-format LONG
gpg --sign-key ID12345678
gpg-agent --daemon
gpg --list-secret-keys --keyid-format LONG
gp
gpg --sign-key IDA13A1730A8C9A4DC
gp
gp
gp
gp
git config --global --list | grep gpg
git config --global commit.gpgsign true
git config --global --list | grep gpg
gpg-agent --daemon
gpg --list-secret-keys --keyid-format LONG
gpg --sign-key IDA13A1730A8C9A4DC
gpg --sign-key ID A13A1730A8C9A4DC
gpg --sign-key ID A13A1730A8C9A4DC
gpg --sign-key user-id A13A1730A8C9A4DC
git remote -v
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_rsa
gp
